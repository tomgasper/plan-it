// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlanIt.Infrastructure.Persistence;

#nullable disable

namespace PlanIt.Infrastructure.Migrations
{
    [DbContext(typeof(PlanItDbContext))]
    [Migration("20240826115750_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlanIt.Domain.ProjectAggregate.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("ProjectOwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Projects", (string)null);
                });

            modelBuilder.Entity("PlanIt.Domain.ProjectAggregate.Project", b =>
                {
                    b.OwnsMany("PlanIt.Domain.ProjectAggregate.Entities.ProjectTask", "ProjectTasks", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("ProjectTaskId");

                            b1.Property<Guid>("ProjectId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasMaxLength(200)
                                .HasColumnType("nvarchar(200)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<Guid>("TaskOwnerId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("Id", "ProjectId");

                            b1.HasIndex("ProjectId");

                            b1.ToTable("ProjectTasks", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ProjectId");

                            b1.OwnsMany("PlanIt.Domain.TaskComment.ValueObjects.TaskCommentId", "TaskCommentIds", b2 =>
                                {
                                    b2.Property<string>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("nvarchar(450)");

                                    b2.Property<Guid?>("ProjectId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("ProjectTaskId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("Value")
                                        .HasColumnType("uniqueidentifier")
                                        .HasColumnName("TaskCommentId");

                                    b2.HasKey("Id");

                                    b2.HasIndex("ProjectTaskId", "ProjectId");

                                    b2.ToTable("TaskCommentIds", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("ProjectTaskId", "ProjectId");
                                });

                            b1.OwnsMany("PlanIt.Domain.TaskWorker.ValueObjects.TaskWorkerId", "TaskWorkerIds", b2 =>
                                {
                                    b2.Property<string>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("nvarchar(450)");

                                    b2.Property<Guid?>("ProjectId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("ProjectTaskId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<Guid>("Value")
                                        .HasColumnType("uniqueidentifier")
                                        .HasColumnName("TaskWorkerId");

                                    b2.HasKey("Id");

                                    b2.HasIndex("ProjectTaskId", "ProjectId");

                                    b2.ToTable("TaskWorkerIds", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("ProjectTaskId", "ProjectId");
                                });

                            b1.Navigation("TaskCommentIds");

                            b1.Navigation("TaskWorkerIds");
                        });

                    b.Navigation("ProjectTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
